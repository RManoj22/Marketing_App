name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  # Continuous Integration (CI) job: Build and Push Docker Image
  ci:
    name: Build and Push Docker Image to GHCR
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Log in to GitHub Container Registry
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.PAT }}

    # Step 3: Build and Push Docker Image to GHCR
    - name: Build and Push Docker Image
      run: |
        IMAGE_NAME=ghcr.io/rmanoj22/django_app:latest
        docker build -t $IMAGE_NAME .
        docker push $IMAGE_NAME

  # Continuous Deployment (CD) job: Deploy Docker Image to EC2
  cd:
    name: Pull and Deploy Docker Image to EC2
    runs-on: ubuntu-latest
    needs: ci  # Ensure the CI job completes first

    steps:
    # Step 1: Set up SSH for EC2
    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

    # Step 2: Add EC2 host to known_hosts
    - name: Add EC2 host to known_hosts
      run: |
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    # Step 3: Pull and Deploy Docker Image on EC2
    - name: Pull and Deploy Docker Image on EC2
      run: |
        ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          export IMAGE_NAME=ghcr.io/rmanoj22/django_app:latest
          export DB_NAME=${{ secrets.DB_NAME }}
          export DB_USER=${{ secrets.DB_USER }}
          export DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          export DB_HOST=${{ secrets.DB_HOST }}
          export DB_PORT=${{ secrets.DB_PORT }}
          
          docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.PAT }}
          cd /home/${{ secrets.EC2_USER }}/app/
          docker-compose down
          docker-compose pull web
          docker-compose up -d
        EOF
